@using CraftsWebApp.Models
@using CraftsWebApp.Services
@inject JsonFileProductService ProductService


<div class="card-columns">
	@foreach(var product in ProductService.GetProducts())
	{
		<div class="card">
			<div class="card-img" style="background-image: url('@product.Image');"></div>
			<div class="card-body">
				<h5 class="card-title">@product.Title</h5>
			</div>
		</div>
		<div class="card-footer">
			<small class="text-muted">
				<button onclick="(e => SelectProduct(@product.Id))" data-bs-toggle="modal" data-bs-target="#productModal" data-bs-dismiss="modal" class="btn btn-primary">
					More Info
				</button>
			</small>
		</div>
	}
</div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (selectedProduct != null)
{

<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle">
    <div class="modal-dialog modal-dialog-centered" role="document">

        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                <button onclick="(e => SelectProduct(product.Id))" data-bs-toggle="modal" data-bs-target="#productModal" class="btn btn-primary">
					More Info
				</button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                    </div>
                    <div class="card-body">
                        <p class="card-text">@selectedProduct.Description</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
 </div>
}

@code {
	Product selectedProduct;
	string selectProductId;

	void SelectProduct(string productId)
	{
		selectProductId = productId;
		selectedProduct = ProductService.GetProducts().First(x => x.Id == productId);
		GetCurrentRating();
	}

	int currentRating = 0;
	int voteCount = 0;
	string voteLabel;

	void GetCurrentRating()
	{
		if(selectedProduct.Ratings == null)
		{
			currentRating = 0;
			voteCount = 0;
		}
		else
		{
			voteCount = selectedProduct.Ratings.Count();
			currentRating = selectedProduct.Ratings.Sum() / voteCount;
		}

		System.Console.WriteLine($"Current rating for {selectedProduct.Id}: {currentRating}");
	}

	void SubmitRating(int rating)
	{
		System.Console.WriteLine($"Current rating for {selectedProduct.Id}: {rating}");
		ProductService.AddRating(selectedProduct.Id, rating);
		SelectProduct(selectedProduct.Id);
	}
}
